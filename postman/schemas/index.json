{
  "openapi": "3.0.1",
  "info": {
    "title": "Api de controle de usuários para o projeto (TOOLS.API). - tools.user.api.v1",
    "description": "Api de controle de usuários para o projeto (TOOLS.API).",
    "termsOfService": "https://github.com/LeonardoFerreira1209",
    "contact": {
      "name": "HYPER.IO DESENVOLVIMENTOS LTDA",
      "email": "HYPER.IO@OUTLOOK.COM"
    },
    "license": {
      "name": "HYPER.IO LICENSE"
    },
    "version": "tools.user.api.v1"
  },
  "paths": {
    "/api/Claim/addclaim": {
      "post": {
        "tags": [
          "Claim"
        ],
        "summary": "Remover claim do usuário",
        "description": "Método responsável por Adicionar claim no usuário",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Claim/removeclaim": {
      "delete": {
        "tags": [
          "Claim"
        ],
        "summary": "Remover claim do usuário",
        "description": "Método responsável por Remover claim do usuário",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Config/options": {
      "options": {
        "tags": [
          "Config"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/getUserRoles/{userId}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Recuperar roles do usuário",
        "description": "Método responsável por recuperar roles do usuário",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/addRole": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Adicionar role",
        "description": "Método responsável por Adicionar uma role",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/addClaimToRole": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Adicionar uma lista de claims na role",
        "description": "Método responsável por adicionar uma lista de claims na role.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/removeClaimToRole": {
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Remover uma lista de claims na role",
        "description": "Método responsável por Remover uma lista de claims na role",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/addRoleToUser": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Adicionar role no usuário",
        "description": "Método responsável por Adicionar uma role no usuário",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role/removeRoleToUser": {
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Remover role do usuário",
        "description": "Método responsável por Remover uma role do usuário",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/create": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Criar uauário.",
        "description": "Método responsavel por criar usuário",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/update": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Atualizar uauário.",
        "description": "Método responsavel por atualizar usuário",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/updateUserImage/{id}": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Atualizar imagem do uauário.",
        "description": "Método responsavel por atualizar a imagem do usuário",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/authetication": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Autenticação do usuário",
        "description": "Método responsável por Autenticar usuário",
        "parameters": [
          {
            "name": "username",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenJWTApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "423": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/get/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Recuperar um usuário",
        "description": "Método responsável por Recuperar um usuário",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/activate/{code}/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Ativar usuário",
        "description": "Método responsável por Ativar usuário",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/application/healthcheck": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "operationId": "HeathCheck",
        "responses": {
          "200": {
            "description": "Healthy"
          },
          "503": {
            "description": "Unhealthy"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Claim": {
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "originalIssuer": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "subject": {
            "$ref": "#/components/schemas/ClaimsIdentity"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "valueType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ClaimRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimsIdentity": {
        "type": "object",
        "properties": {
          "authenticationType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isAuthenticated": {
            "type": "boolean",
            "readOnly": true
          },
          "actor": {
            "$ref": "#/components/schemas/ClaimsIdentity"
          },
          "bootstrapContext": {
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            },
            "nullable": true,
            "readOnly": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "nameClaimType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "roleClaimType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CompanyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planId": {
            "type": "string",
            "format": "uuid"
          },
          "plan": {
            "$ref": "#/components/schemas/PlanResponse"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdUserId": {
            "type": "string",
            "format": "uuid"
          },
          "updatedUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        },
        "additionalProperties": false
      },
      "DadosNotificacao": {
        "type": "object",
        "properties": {
          "mensagem": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gender": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ObjectApiResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodes"
          },
          "sucesso": {
            "type": "boolean"
          },
          "dados": {
            "nullable": true
          },
          "notificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DadosNotificacao"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlanResponse": {
        "type": "object",
        "properties": {
          "planName": {
            "type": "string",
            "nullable": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true
          },
          "planCost": {
            "type": "number",
            "format": "double"
          },
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "$ref": "#/components/schemas/RolesResponse"
          },
          "totalMonthsPlan": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdUserId": {
            "type": "string",
            "format": "uuid"
          },
          "updatedUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        },
        "additionalProperties": false
      },
      "RoleRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RolesResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdUserId": {
            "type": "string",
            "format": "uuid"
          },
          "updatedUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        },
        "additionalProperties": false
      },
      "Status": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "StatusCodes": {
        "enum": [
          100,
          101,
          102,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          303,
          304,
          305,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          418,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          444,
          451,
          499,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511,
          599
        ],
        "type": "integer",
        "format": "int32"
      },
      "TokenJWT": {
        "type": "object",
        "properties": {
          "validTo": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TokenJWTApiResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodes"
          },
          "sucesso": {
            "type": "boolean"
          },
          "dados": {
            "$ref": "#/components/schemas/TokenJWT"
          },
          "notificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DadosNotificacao"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserCreateRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "birthDay": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          },
          "rg": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "password": {
            "type": "string",
            "format": "password",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "format": "tel",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "birthDay": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "imageUri": {
            "type": "string",
            "nullable": true
          },
          "rg": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "company": {
            "$ref": "#/components/schemas/CompanyResponse"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdUserId": {
            "type": "string",
            "format": "uuid"
          },
          "updatedUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        },
        "additionalProperties": false
      },
      "UserResponseApiResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "$ref": "#/components/schemas/StatusCodes"
          },
          "sucesso": {
            "type": "boolean"
          },
          "dados": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "notificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DadosNotificacao"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "birthDay": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "rg": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "currentPassword": {
            "type": "string",
            "format": "password",
            "nullable": true
          },
          "password": {
            "type": "string",
            "format": "password",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "twoFactorEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}